type Query {
  me: Viewer!
}

type Mutation {
  register(input: NewUser!): Viewer!
  login(input: LoginInput!): Viewer!
  postMessage(text: String!, username: String!, roomId: String!): Message!
}

type Viewer {
  id: ID!
  username: String!
  token: String!
  # room(id: String!): Chatroom!
}

type Chatroom {
    id: ID!
    messages: [Message!]!
}

type Message {
    id: ID!
    text: String!
    createdBy: String!
    createdAt: Time!
}

input NewUser {
  username: String!
  password: String!
}

input LoginInput {
  username: String!
  password: String!
}

scalar Time